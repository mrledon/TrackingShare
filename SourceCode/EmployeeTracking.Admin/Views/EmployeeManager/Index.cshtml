@using PagedList.Mvc
@model PagedList.IPagedList<EmployeeTracking.Data.ModelCustom.EmployeeManagerModel>
@using System.Configuration;

@{
    ViewBag.Title = "Employeemanager";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Quản lý nhân viên</h2>
<style>
    .divValidate{
        color:Red; 
        clear:left;
    }
</style>
<div class="row">
    <div class="col-xs-12">
        <a class="btn btn-sm btn-success" onclick="addNew()">Thêm mới</a>
        <a class="btn btn-sm btn-info" onclick="downloadExcel()">Export Excel</a>
        <a class="btn btn-sm btn-info" onclick="document.getElementById('IMPORTEXCEL').click();">Import Excel</a>
        <div style="display: none;">
            <input type="file" id="IMPORTEXCEL" name="IMPORTEXCEL"
                   onchange="ValidateFile(this);" />
        </div>
        <div class="divValidate" id="_valIMPORTEXCEL"></div>
    </div>
</div>
<div class="row clearfix">
    <p></p>
</div>


<div class="row">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-body">
                @using (Html.BeginForm("Index", "EmployeeManager", FormMethod.Get, new { id = "frmFilter" }))
                {
                    <div class="row">
                        <div class="col-xs-12">
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Mã nhân viên</label>
                                    <input type="text" class="form-control" id="code" name="code" value="@ViewBag.Code" />
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Tên nhân viên</label>
                                    <input type="text" class="form-control" id="name" name="name" value="@ViewBag.Name" />
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Giới tính</label>
                                    @(Html.DropDownList("gender", new List<SelectListItem>() {
                                                new SelectListItem() {
                                                    Text = "-- Chọn giới tính --",
                                                    Value = ""
                                                },
                                                new SelectListItem() {
                                                    Text = "Nam",
                                                    Value = "true"
                                                },
                                                new SelectListItem() {
                                                    Text = "Nữ",
                                                    Value = "false"
                                                }
                                            }, new { @class = "form-control", @Value = @ViewBag.Gender }))
                            </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Ngày sinh</label>
                                    @Html.TextBox("birthday", "{0:dd/MM/yyyy}", new { @class = "form-control", @type = "date", @Value = @ViewBag.Birthday })
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Số CMND</label>
                                    <input type="text" class="form-control" id="identityCard" name="identityCard" value="@ViewBag.IdentityCard" />
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Số điện thoại</label>
                                    <input type="text" class="form-control" id="phone" name="phone" value="@ViewBag.Phone" />
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group">
                                    <label class="control-label">Người quản lý</label>
                                    <input type="text" class="form-control" id="owner" name="owner" value="@ViewBag.Owner" />
                                </div>
                            </div>
                            <div class="col-xs-12 col-sm-6 col-md-4">
                                <div class="form-group" style="margin-top:25px;">
                                    <button type="submit" class="btn btn-primary">Tìm kiếm</button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
                <div class="row">
                    <div class="col-xs-12">
                        <table class="table table-bordered table-striped table-hover">
                            <thead style="font-weight:bold;">
                                <tr>
                                    <td>.No</td>
                                    <td>Mã nhân viên</td>
                                    <td>Họ và Tên</td>
                                    <td>Giới tính</td>
                                    <td>Ngày sinh</td>
                                    <td>Số CMND</td>
                                    <td>Số điện thoại</td>
                                    <td>Người quản lý</td>
                                    <td width="210"></td>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model)
                                {
                                    <tr>
                                        <td>@Html.DisplayFor(modelItem => item.Index)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Code)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Name)</td>
                                        <td>@Html.DisplayFor(modelItem => item.GenderString)</td>
                                        <td>@Html.DisplayFor(modelItem => item.BirthdayString)</td>
                                        <td>@Html.DisplayFor(modelItem => item.IdentityCard)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Phone)</td>
                                        <td>@Html.DisplayFor(modelItem => item.Owner)</td>
                                        <td>
                                            <a class="btn btn-xs btn-info" onclick="btnUpdate_Click('@item.Id')">Chỉnh sửa</a>
                                            <a class="btn btn-xs btn-danger" onclick="btnDelete_Click('@item.Id')">Xóa</a>
                                            <a class="btn btn-xs btn-warning" onclick="btnResetPassword_Click('@item.Id')">Reset password</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                        @Html.PagedListPager(Model, page => Url.Action("Index", new
                   {
                       page = page,
                       code = Request.QueryString["code"],
                       name = Request.QueryString["name"],
                       gender = Request.QueryString["gender"],
                       birthday = Request.QueryString["birthday"],
                       identityCard = Request.QueryString["identityCard"],
                       phone = Request.QueryString["phone"],
                       owner = Request.QueryString["owner"]
                   }), PagedListRenderOptions.PageNumbersOnly)
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modal Addnew-->
<div class="modal fade" id="myModalDetail" tabindex="-1" role="dialog" data-backdrop="static" style="display: none;">
    <div class="modal-dialog" role="document">
        <div id='modelContainer'></div>
    </div>
</div>

<script>
    $(function () {
        $("#myModalDetail").on("hidden.bs.modal", function () {
            refreshData();
        });
        $("#myModalDetail").on("shown.bs.modal", function () {
            $("frmDetail").find("span.field-validation-valid").hide();
        });
    });

    //Thêm thông tin.
    function addNew() {
        var url = '@Url.Action("GetDetail", "EmployeeManager")' + "?id=";

        $.get(url, function (data) {
            $('#modelContainer').html(data);
            $('#myModalDetail').modal('show');
        });
    }

    function btnUpdate_Click(id) {
        var url = '@Url.Action("GetDetail", "EmployeeManager")' + "?id=" + id;

        $.get(url, function (data) {
            $('#modelContainer').html(data);
            $('#myModalDetail').modal('show');
        });
    }

    function btnDelete_Click(id) {
        $.confirm({
            icon: 'fa fa-question-circle-o canhbao',
            closeIcon: true,
            height: 50,
            title: "Xác nhận",
            content: "Bạn muốn xóa nhân viên này không?",
            columnClass: 'col-md-4 col-md-offset-4',
            confirmButton: 'Có',
            cancelButton: 'Không',
            confirm: function () {
                $.ajax({
                    url: '/EmployeeManager/DeleteModel',
                    type: "POST",
                    data: { id: id },
                    success: function (data) {
                        if (data.IsSuccess) {
                            refreshData();
                            //openFunc.pushNotifySuccess("Xóa nhân viên thành công!");
                        }
                        else {
                            openFunc.pushNotifyError(data.Message);
                        }
                    }
                });
            },
            cancel: function () {

            }
        });
    }

    function btnResetPassword_Click(id) {
        if (confirm("Bạn muốn đổi mật khẩu nhân viên này không?")) {
            $.ajax({
                url: '/EmployeeManager/ResetPassword',
                type: "POST",
                data: { id: id },
                success: function (data) {
                    if (data.IsSuccess) {
                        //refreshData();
                        openFunc.pushNotifySuccess("Đổi mật khẩu thành công!");
                    }
                    else {
                        openFunc.pushNotifyError(data.Message);
                    }
                }
            });
        }
    }

    function refreshData()
    {
        $("#frmFilter").submit();
    }

    function downloadExcel() {
        window.location = '/EmployeeManager/ExportExcel?code=' + $("#code").val() + "&&name=" + $("#name").val() +
            "&&gender=" + $("#gender").val() + "&&birthday=" + $("#birthday").val() + "&&identityCard=" + $("#identityCard").val() +
            "&&phone=" + $("#phone").val() + "&&owner=" + $("#owner").val();
    }

    function ValidateFile(value) {
        var file = getNameFromPath($(value).val());
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1)).toLowerCase();
            switch (extension) {
                case 'xls':
                case 'xlsx':
                case 'csv':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }

        if (flag == false) {

            var str = value.name;
            var data = "_val" + str;
            $("#" + data).text("Bạn chỉ có thể chọn file có định dạng xls, xlsx, csv");
            $("#" + value.name).val('');
            return false;
        }
        else
        {
            var formData = new FormData();
            var totalFiles = document.getElementById("IMPORTEXCEL").files.length;
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("IMPORTEXCEL").files[i];

                formData.append("IMPORTEXCEL", file);
            }
            $("#" + value.name).val('');
            $.ajax({
                type: "POST",
                url: '/EmployeeManager/ImportExcel',
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (data) {
                    if (data.IsSuccess) {
                        refreshData();
                    }
                    else {
                        openFunc.pushNotifyError(data.Message);
                    }
                },
                error: function (error) {
                    openFunc.pushNotifyError(error);
                }
            });
        }
    }

    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }
</script>