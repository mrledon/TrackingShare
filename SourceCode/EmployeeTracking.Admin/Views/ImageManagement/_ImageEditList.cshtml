@using EmployeeTracking.Data.ModelCustom
@model TrackDetailViewModel
@{
    var lstPosm = (List<EmployeeTracking.Data.ModelCustom.MinModel>)ViewBag.PosmType;
    List<string> s = new List<string>() { "DEFAULT", "SELFIE", "STORE_FAILED" };
}

@if (!s.Contains(Model.MediaTypeId))
{
    <div class="row" style="margin-bottom:20px;">
        <div class="col-sm-4">
            @Html.DropDownList("dlPosmType", new SelectList(lstPosm, "Value", "Text", Model.MediaTypeId), new { @class = "form-control" })
        </div>
        <div class="col-sm-4">
            <input type="number" value="@Model.TrackDetailImages.First().PosmNumber" class="form-control" id="ValuePosmOfMediaType" />
        </div>
        <div class="col-sm-2">
            <a class="btn btn-default" id="SavePosmType">Áp dụng</a>
        </div>
    </div>
}

<div class="row">
    @foreach (var image in Model.TrackDetailImages.OrderBy(x => x.CreateDate).ToList())
    {
        <div class="col-md-3" id="track-detail-@image.Id" style="margin-bottom: 10px">
            <img src="@(image.Url + image.FileName)" style="width:auto; height:70px;" class="img-origin" />
            <div style="margin-top: 5px">
                <a class="btn btn-danger btn-xs" href="#" onclick="deleteTrackDetail('@image.Id'); return false;"><i class="fa fa-fw fa-close"></i> Xóa</a>
                <a class="btn btn-warning btn-xs btn-change" href="#" onclick="changeDetailImage('@image.Id'); return false;"><i class="fa fa-camera fa-fw"></i> Thay đổi</a>
                <a class="btn btn-primary btn-xs btn-submit hidden" href="#" onclick="submitChangeDetailImage(); return false;"><i class="fa fa-save fa-fw"></i> Lưu</a>
                <strong>@image.MediaTypeSub</strong>
            </div>
        </div>
    }
    @if (Model.MediaTypeId == "DEFAULT")
    {
        <div class="imageReview" id="_divDEFAULT-GENERAL" style="display: none;">
            <img alt="Ảnh review" id="_imgDEFAULT-GENERAL" height="295" width="295" />
        </div>
        <div style="display: none;">
            <input type="file" id="DEFAULT-GENERAL" name="DEFAULT-GENERAL"
                   onchange="ValidateFile(this);" />
        </div>
        <a class="btn btn-info btn-xs" href="#" onclick="AddImage('DEFAULT'); return false;">Thêm hình ảnh</a>
        <div class="divValidate" id="_valDEFAULT-GENERAL"></div>
    }
    else
        if (Model.MediaTypeId == "SELFIE")
    {
        <div style="display: none;">
            <input type="file" id="DEFAULT-GENERAL" name="DEFAULT-GENERAL"
                   onchange="ValidateFile(this);" />
        </div>
        <a class="btn btn-info btn-xs" href="#" onclick="AddImage('SELFIE'); return false;">Thêm hình ảnh</a>
    }
    else
        if (Model.MediaTypeId != "STORE_FAILED")
    {
        <div style="display: none;">
            <input type="file" id="DEFAULT-GENERAL" name="DEFAULT-GENERAL"
                   onchange="ValidateFile(this);" />
        </div>
        <a class="btn btn-info btn-xs" href="#" onclick="AddImagePosm('SELFIE'); return false;">Thêm hình ảnh</a>
    }
</div>
<hr />

<script>

    function getNameFromPath(strFilepath) {
        var objRE = new RegExp(/([^\/\\]+)$/);
        var strName = objRE.exec(strFilepath);

        if (strName == null) {
            return null;
        }
        else {
            return strName[0];
        }
    }

    function ValidateFileSize(fileid) {
        try {
            var fileSize = 0;
            if (navigator.userAgent.match(/msie/i)) {
                var obaxo = new ActiveXObject("Scripting.FileSystemObject");
                var filePath = $("#" + fileid)[0].value;
                var objFile = obaxo.getFile(filePath);
                var fileSize = objFile.size;
                fileSize = fileSize / 1048576;
            }
            else {
                fileSize = $(fileid)[0].files[0].size
                fileSize = fileSize / 1048576;
            }

            return fileSize;
        }
        catch (e) {
            alert("Error is :" + e);
        }
    }

    function loadImageReview(value, idImage) {
        var filerd = new FileReader();
        filerd.onload = function (e) {
            $('#_img' + idImage).attr('src', e.target.result);
        };
        filerd.readAsDataURL(value.files[0]);
        $('#_div' + idImage).show();
    }

    function ValidateFile(value) {
        var file = getNameFromPath($(value).val());
        if (file != null) {
            var extension = file.substr((file.lastIndexOf('.') + 1)).toLowerCase();
            switch (extension) {
                case 'jpg':
                case 'jpeg':
                case 'png':
                    flag = true;
                    break;
                default:
                    flag = false;
            }
        }

        if (flag == false) {

            var str = value.name;
            //var res = str.split("-");
            var data = "_val" + str;
            $("#" + data).text("Bạn chỉ có thể chọn file có định dạng jpg, jpeg, png");
            $("#" + value.name).val('');
            return false;
        }
        else {
            var size = ValidateFileSize(value);
            var str = value.name;
            //var res = str.split("-");
            var data = "_val" + str;
            if (size > 1) {
                $("#" + data).text("Bạn chỉ có thể upload file kích thước tối đa là 1 MB.");
                $("#" + value.name).val('');
            }
            else {
                $("#" + data).text("");
                loadImageReview(value, str);
            }
        }

        var file = $('#DEFAULT-GENERAL')[0].files[0];
        var formData = new FormData();
        formData.append("inputFile", file);
        console.log(file);
        $.ajax({
            type: 'POST',
            url: '@Url.Action("AddImage", "ImageManagement")',
            data: formData,
            datatype: "json",
            contentType: false,
            processData: false,
            success: function (data) {
                alert('success');
            },
            error: function () {
                alert('error');
            }
        });

    }
</script>