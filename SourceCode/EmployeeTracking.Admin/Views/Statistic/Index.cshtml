<link href="~/Assets/select2/select2.min.css" rel="stylesheet" />
<script src="~/Assets/select2/select2.min.js"></script>


<style>
    .axias path, .axias line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .x.axias path {
        display: none;
    }
</style>

@model List<EmployeeTracking.Data.ModelCustom.StoreManagerModel>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*chia lam 3 phan view: 1. Statistic chart, 2. phan google maps &Aacute; selections, 3. popupDetail*@
@*=============================== Day la phan chart ========================*@
<div class="">
    <h2>Thống kê doanh thu</h2>
</div>
<div class="row">
    <div class="col-md-12" style="display:flex;justify-content:center;">
        <div id="chartLoad">

        </div>
    </div>
</div>

@*=============================== Het phan chart ========================*@
<div class="row">
    <div class="col-md-12">
        <div id="mapLoad">

        </div>
    </div>
</div>
@*=============================== Day la phan google maps vs selectiion========================*@

@*=============================== Het phan chart ========================*@

@*=============================== Day la phan popup detail========================*@

<!-- Modal Addnew-->
<div class="modal fade" id="myModalDetail" tabindex="-1" role="dialog" data-backdrop="static" style="display: none;">
    <div class="modal-dialog" role="document">
        <div id='modelContainer'></div>
    </div>
</div>

@*=============================== Day la phan xu ly javascriipt========================*@

<!--Chart-->

<script src="~/Assets/d3/d3.v3.min.js"></script>
<script>

    var dataJson = [{ "categorie": "1/12/2018", "values": [{ "value": 1, "rate": "Thành công" }, { "value": 21, "rate": "Không thành công" }, { "value": 13, "rate": "Chưa submit" }] }, { "categorie": "2/12/2018", "values": [{ "value": 3, "rate": "Thành công" }, { "value": 22, "rate": "Không thành công" }, { "value": 6, "rate": "Chưa submit" }] }, { "categorie": "3/12/2018", "values": [{ "value": 12, "rate": "Thành công" }, { "value": 7, "rate": "Không thành công" }, { "value": 18, "rate": "Chưa submit" }] }, { "categorie": "4/12/2018", "values": [{ "value": 6, "rate": "Thành công" }, { "value": 15, "rate": "Không thành công" }, { "value": 9, "rate": "Chưa submit" }] }, { "categorie": "5/12/2018", "values": [{ "value": 6, "rate": "Thành công" }, { "value": 15, "rate": "Không thành công" }, { "value": 9, "rate": "Chưa submit" }] }];

    var margin = { top: 20, right: 20, bottom: 30, left: 40 },
        width = 960 - margin.left - margin.right,
        height = 500 - margin.top - margin.bottom;

    var x0 = d3.scale.ordinal()
        .rangeRoundBands([0, width], .1);

    var x1 = d3.scale.ordinal();

    var y = d3.scale.linear()
        .range([height, 0]);

    var xAxis = d3.svg.axis()
        .scale(x0)
        .tickSize(0)
        .orient("bottom");

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left");

    var color = d3.scale.ordinal()
        .range(["#ca0020", "#f4a582", "#d5d5d5", "#92c5de", "#0571b0"]);

    var svg = d3.select('#chartLoad').append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
        .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");
    //var svg = d3.select("");

    d3.json("https://api.myjson.com/bins/he4ru", function (error, data) {

        var categoriesNames = data.map(function (d) { return d.categorie; });
        var rateNames = data[0].values.map(function (d) { return d.rate; });

        x0.domain(categoriesNames);
        x1.domain(rateNames).rangeRoundBands([0, x0.rangeBand()]);
        y.domain([0, d3.max(data, function (categorie) { return d3.max(categorie.values, function (d) { return d.value; }); })]);

        svg.append("g")
            .attr("class", "x axis")
            .attr("transform", "translate(0," + height + ")")
            .call(xAxis);

        svg.append("g")
            .attr("class", "y axis")
            .style('opacity', '0')
            .call(yAxis)
            .append("text")
            .attr("transform", "rotate(-90)")
            .attr("y", 6)
            .attr("dy", ".71em")
            .style("text-anchor", "end")
            .style('font-weight', 'bold')
            .text("Số ảnh");

        svg.select('.y').transition().duration(500).delay(1300).style('opacity', '1');

        var slice = svg.selectAll(".slice")
            .data(data)
            .enter().append("g")
            .attr("class", "g")
            .attr("transform", function (d) { return "translate(" + x0(d.categorie) + ",0)"; });

        slice.selectAll("rect")
            .data(function (d) { return d.values; })
            .enter().append("rect")
            .attr("width", x1.rangeBand())
            .attr("x", function (d) { return x1(d.rate); })
            .style("fill", function (d) { return color(d.rate) })
            .attr("y", function (d) { return y(0); })
            .attr("height", function (d) { return height - y(0); })
            .on("mouseover", function (d) {
                d3.select(this).style("fill", d3.rgb(color(d.rate)).darker(2));
            })
            .on("mouseout", function (d) {
                d3.select(this).style("fill", color(d.rate));
            });

        slice.selectAll("rect")
            .transition()
            .delay(function (d) { return Math.random() * 1000; })
            .duration(1000)
            .attr("y", function (d) { return y(d.value); })
            .attr("height", function (d) { return height - y(d.value); });

        //Legend
        var legend = svg.selectAll(".legend")
            .data(data[0].values.map(function (d) { return d.rate; }).reverse())
            .enter().append("g")
            .attr("class", "legend")
            .attr("transform", function (d, i) { return "translate(0," + i * 20 + ")"; })
            .style("opacity", "0");

        legend.append("rect")
            .attr("x", width - 18)
            .attr("width", 18)
            .attr("height", 18)
            .style("fill", function (d) { return color(d); });

        legend.append("text")
            .attr("x", width - 24)
            .attr("y", 9)
            .attr("dy", ".35em")
            .style("text-anchor", "end")
            .text(function (d) { return d; });

        legend.transition().duration(500).delay(function (d, i) { return 1300 + 100 * i; }).style("opacity", "1");

    });
    
</script>