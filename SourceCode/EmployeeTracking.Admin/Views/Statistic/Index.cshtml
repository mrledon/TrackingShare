@model  List<EmployeeTracking.Data.ModelCustom.StatisticNumberStoreDay>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<style>
    .axias path, .axias line {
        fill: none;
        stroke: #000;
        shape-rendering: crispEdges;
    }

    .x.axias path {
        display: none;
    }

    #mapLoad {
    }

    .iframe {
        width: 100%;
    }

    .gmap_canvas {
        width: 100% !important;
    }

    .mapouter {
        width: 100% !important;
    }

    .form-control {
        border-radius: 5px;
    }

    .sltProvince {
        text-decoration: none;
        color: black;
    }

    .sltProvince {
        text-decoration: none;
    }

        .sltProvince:hover {
            text-decoration: underline;
            color: cadetblue;
            cursor: pointer;
        }

    .lstProvince {
        padding: 3px;
        background-color: antiquewhite;
        border-bottom: 0.15px solid blue;
        margin-top: 1px;
    }

    .lstProvince {
        padding: 3px;
        background-color: #F4F4F4;
        border-bottom: 0.15px solid blue;
        margin-top: 1px;
        color: black;
    }
</style>
<style>
    #carousel-custom {
        margin: 10px auto;
        width: 400px;
    }

        #carousel-custom .carousel-indicators {
            margin: 10px 0 0;
            overflow: auto;
            position: static;
            text-align: left;
            white-space: nowrap;
            width: 100%;
        }

            #carousel-custom .carousel-indicators li {
                background-color: transparent;
                -webkit-border-radius: 0;
                border-radius: 0;
                display: inline-block;
                height: auto;
                margin: 0 !important;
                width: auto;
            }

                #carousel-custom .carousel-indicators li img {
                    display: block;
                    opacity: 0.5;
                    height: 50px;
                }

                #carousel-custom .carousel-indicators li.active img {
                    opacity: 1;
                }

                #carousel-custom .carousel-indicators li:hover img {
                    opacity: 0.75;
                }

        #carousel-custom .carousel-outer {
            position: relative;
        }
</style>


@*chia lam 3 phan view: 1. Statistic chart, 2. phan google maps &Aacute; selections, 3. popupDetail*@
@*=============================== Day la phan chart ========================*@
<div class="">
    <h2>Thống kê doanh thu</h2>
    @*<button class="btn btn-danger" data-toggle="modal" data-target="#myModalDetail" onclick="showModal()">*@
    <a class="btn btn-sm btn btn-danger" onclick="showModal()">Show modal</a>
    @*Show modal*@
    @*</button>*@
</div>
<div class="row">
    <div class="col-md-12" style="display:flex;justify-content:center;">
        <div id="chartLoad" style="
    padding: 5px;
    border: 1px solid #2519d2f7;
    border-radius: 9px;
    width: 80%;
    display: flex;
    height: 300px;
    justify-content: center;
">

        </div>
    </div>
</div>
@*=============================== Het phan chart ========================*@
<div class="row" style="margin-top:75px;">
    <div class="col-md-12">
        <div class="col-md-8">
            <div id="map" style="position: relative;overflow: hidden;height: 100%;min-height: 500px;"></div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="col-md-4 form-group">
                        <select style="width:100%;"
                                id="provinceVietNam"
                                class="provinceVietNam1 form-control">
                            <option value="0" selected>
                                Toàn quốc
                            </option>
                            <option value="1">
                                Hồ Chí Minh
                            </option>
                            <option value="2">
                                Hà Nội
                            </option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <select style="width:100%;" class="districtVietNam form-control">
                            <option value="0">
                                Quận/huyện
                            </option>
                            <option value="1">
                                Quận 2
                            </option>
                            <option value="2">
                                Quận 3
                            </option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <select style="width:100%;" class="wardVietNam form-control">
                            <option value="0">
                                Phường 1
                            </option>
                            <option value="1">
                                Phường 2
                            </option>
                            <option value="2">
                                Phường 3
                            </option>
                        </select>
                    </div>
                    <div class="col-md-12">
                        <ul style="width:100%;height:408px;overflow-y:scroll;list-style-type:none;padding:0;">
                            <table style="width:100%" class="table table-bordered table-hover table-striped">
                                <tbody id="lstStore"></tbody>
                            </table>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    #carousel-custom {
        margin: 0 !important;
        width: 71%;
    }
</style>

<div id="myModalDetail" class="modal fade" role="dialog" data-stored="">
    <div class="modal-dialog" style="width:80%;">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Thông tin cửa hàng</h4>
            </div>
            <div class="modal-body">
                <div id='modelContainer'></div>
            </div>

            <div class="modal-footer" style="border: none;">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
@*=============================== Day la phan xu ly javascriipt========================*@

<!--Chart-->

<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<script>

    //Thêm thông tin.
    function showModal(id) {
        var url = '@Url.Action("getPopUpDetail", "Statistic")' + '?id=' + id;

        $.get(url, function (data) {
            $('#modelContainer').html(data);
            $('#myModalDetail').modal('show');
        });
    }

    function loadTrackSessionCarousel(id) {
        $.ajax({
            method: "GET",
            url: '@Url.Action("TrackSessionCarousel", "Statistic")',
            data: { id: id },
            success: function (res) {
                $("#track-carousel").html(res);
                $(".btn-view-carousel").removeClass("disabled");
                $("#btn-view-carousel-" + id).addClass("disabled");
            }, error: function (error) {
                alert("Error!");
            }
        });
    }
</script>
<script>
    //google.charts.load('current', { 'packages': ['bar'] })
    google.charts.load('current', { packages: ['corechart', 'bar'] });
    google.charts.setOnLoadCallback(drawColColors);
    function drawColColors() {

        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Báo cáo');
        data.addColumn('number', 'Thành công');
        data.addColumn('number', 'Không thành công');
        data.addColumn('number', 'Chưa submit');

        function loadDataSummaryChart(callback) {
            $.ajax({
                url: 'http://localhost:60312/Statistic/ShowFiveDayChart',
                type: 'POST',
                cache: false,
                async: true,
                xhrFields: {
                    withCredentials: true,
                },
                dataType: 'json',
                success: function (response) {
                    $.each(response, function (idx, item) {
                        data.addRow([item.Categorie, item.Success, item.Fail, item.UnSubmit]);
                    });
                    callback();
                },
                error: function (xhr, status, error) {
                }
            });
        }

        var options = {
            legend: { position: 'bottom' },
            title: '',
            titlePosition: 'out',
            hAxis: {
                title: ''
            },
            vAxis: {
                title: '',
                format: 'short',
                gridlines: { count: 5 },
                scareType: 'mirrorLog'
            },
            series: {
                0: {
                    color: '2ECC40'
                },
                1: {
                    color: 'AAAAAA'
                },
                2: {
                    color: 'FFDC00'
                }
            },
            //Makes the entire category's tooltip active
            focusTarget: 'category',
            //Use a html tooltip
            tooltip: { isHtml: true },
            asex: {

            },
            pointSize: 5,
            backgroundColor: 'none'
        };

        function drawChart() {
            var chart = new google.visualization.ColumnChart(document.getElementById('chartLoad'));
            chart.draw(data, options);
        }

        loadDataSummaryChart(drawChart);

        if (document.addEventListener) {
            window.addEventListener('resize', drawChart);
        }
        else if (document.attachEvent) {
            window.attachEvent('onresize', drawChart);
        }
        else {
            window.resize = drawChart;
        }
    }

</script>


<script>
    var data = [
        {
            id: 0,
            text: 'Toàn Quốc'
        },
        {
            id: 1,
            text: 'Hồ Chí Minh'
        },
        {
            id: 2,
            text: 'Hà Nội'
        },
        {
            id: 3,
            text: 'Bình Định'
        },
        {
            id: 4,
            text: 'Huế'
        }
    ];

    var district = [
        {
            id: 0,
            text: 'Quận Gò Vấp'
        },
        {
            id: 1,
            text: 'Quận 2'
        },
        {
            id: 2,
            text: 'Quận 1'
        },
        {
            id: 3,
            text: 'Quận 3'
        },
        {
            id: 4,
            text: 'Quận 4'
        }
    ]

    var ward = [
        {
            id: 0,
            text: 'Phường 1'
        },
        {
            id: 1,
            text: 'Phường 2'
        },
        {
            id: 2,
            text: 'Phường 3'
        },
        {
            id: 3,
            text: 'Phường 4'
        },
        {
            id: 4,
            text: 'Phường 5'
        }
	]

    window.onload = () => {
        $(".districtVietNam").hide();
        $(".wardVietNam").hide();
		//Step 1: Load vào tỉnh/thành phố
		$.ajax({
			url: '@Url.Action("GetProvinceSelect", "Location")',
			type: "GET",
			success: function(data) {
				var s = '<option value=' + 0 + '>' + 'Toàn quốc' + '</option>';
				for (var i = 0; i < data.length; i++) {

					s = s + '<option value=' + data[i].Id + '>' + data[i].Name + '</option>';
				}
                $('.provinceVietNam1').html(s);
                //Lấy danh sách tất các các tỉnh thành
                listStoreAllProvince();
                //Hiển thị map
                showAllLocationOnMap();
			}
		});
    }

	$(document).ready(function () {

		//Step 2: Bẫy sự kiện onchange cho tỉnh/thành phố
		$("#provinceVietNam").on("change", function () {
			var id = $("#provinceVietNam option:selected").val();
			if (id === "0") {
                $(".districtVietNam").hide();
                $(".wardVietNam").hide();
                listStoreAllProvince();
                showAllLocationOnMap();
            } else {
				$(".districtVietNam").show();
                $(".wardVietNam").show();

				//Step 3: Nếu có 1 tỉnh/thành phố được chọn bởi người dùng
                setDistrictCombobox(id);
			}

		});

		//Step 5: Bẫy sự kiện onchange cho quận/huyện
        $(".districtVietNam").on("change", function () {
			var id = $(".districtVietNam option:selected").val();
            setWardCombobox(id);
        });
        //Bẫy sự kiện onchange cho phường xã
        $(".wardVietNam").on("change", function () {
            var provinceId = $("#provinceVietNam option:selected").val();
            var districtId = $(".districtVietNam option:selected").val();
            var wardId = $(".wardVietNam option:selected").val();
            listStoreAByProvince(provinceId, districtId, wardId);
        });
    });

    function setDistrictCombobox(provinceID) {
        $.ajax({
                    url: '@Url.Action("GetDistrictSelect", "Location")',
                    type: "GET",
                    data: { 'provinceId': provinceID },
                    async: false,
					success: function (data) {
						//Step 4: Load dữ liệu cho quận/huyện theo tỉnh đã chọn ở trên
                        var s = '';
						for(var i=0; i<data.length; i++) {
							s = s + '<option value=' + data[i].Id + '>'+ data[i].Name +  '</option>';
						}
                        $('.districtVietNam').html(s);
                        $('select.districtVietNam').val(data[0].Id);
                        setWardCombobox(data[0].Id);
                    }
				});
    }

    function setWardCombobox(districtId) {
        var provinceId = $("#provinceVietNam option:selected").val();
        if (districtId === "0") {
                $(".wardVietNam").hide();
            } else {
                $(".wardVietNam").show();

				//Step 6: Nếu có 1 quận/huyện được chọn bởi người dùng
				$.ajax({
                    url: '@Url.Action("GetWardSelect", "Location")',
                    type: "GET",
                    async: false,
                    data: { 'districtId': districtId},
                    success: function (data) {
                        var wardId = 0;
                        if (data.length > 0) {
                            wardId = data[0].Id;
                        }
						//Step 7: Load dữ liệu của phường/xã theo {tỉnh/thành phố + quận/huyện} ở trên
                        var s = '';
						for(var i=0; i<data.length; i++) {
							s = s + '<option value=' + data[i].Id + '>'+ data[i].Name +  '</option>';
						}
                        $('.wardVietNam').html(s);
                        listStoreAByProvince(provinceId, districtId, wardId);
                    }
				});
            }

    }


    //Detect, when user click into province item in list
    $(document).on('click', '.provinceItem', function (e) {
        var provinceId = $(this).attr('data-id');
        setDistrictCombobox(provinceId);
        $('#provinceVietNam').val(provinceId);
        $(".districtVietNam").show();
        $(".wardVietNam").show();
    });

    //Detect, when user click into store item in list
    $(document).on('click', '.storeItem', function (e) {
        var storeId = $(this).attr('data-id');
        var lng = $(this).attr('data-lng');
        var lat = $(this).attr('data-lat');
        if (lng === "0" || lat === "0") {
            initMap([]);
        } else {
            initMap([[storeId, lng, lat]]);
        }
    });

    function listStoreAllProvince() {
        $.ajax({
                    url: '@Url.Action("GetAllStoreAllProvince", "Location")',
                    type: "GET",
                    success: function (data) {
                        $('#lstStore').empty();
                        $.each(data, function (idx, item) {
                            $('#lstStore').append('<tr><td><a href="javascript:;" class="provinceItem" data-id="' + item.Id + '">' + item.Name + '(' + item.NumOfStore + ')</a></td></tr>');
                        });
                    }
				});
    }

    function listStoreAByProvince(province, district, ward) {
        var location = [];

        $.ajax({
                    url: '@Url.Action("GetByProvince", "StoreManager")',
                    type: "GET",
                    async: false,
                    data: { 'provinceId': province, 'districtID': district, 'wardID': ward },
                    success: function (data) {
                        $('#lstStore').empty();
                        $.each(data, function (idx, item) {
                            var s = '';
                            if (item.HouseNumber.length != 0) {
                                s += item.HouseNumber;
                            }
                            if (item.StreetNames.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.StreetNames;
                            }
                            if (item.WardName.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.WardName;
                            }
                            if (item.DistrictName.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.DistrictName;
                            }
                            if (item.ProvinceName.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.ProvinceName;
                            }

                            $('#lstStore').append('<tr><td><a href="javascript:;" class="storeItem" data-id="' + item.Id + '" data-lng="' + item.LNG + '" data-lat="' + item.LAT + '">' + s + '</a></td></tr>');

                            if (item.LAT !== 0 && item.LNG !== 0) {
                                var lItem = [item.Id, item.LNG, item.LAT];
                                location.push(lItem);
                            }

                        });
                        initMap(location);
                    }
				});
    }

    function showAllLocationOnMap() {

        var location = [];

        $.ajax({
                    url: '@Url.Action("GetByProvince", "StoreManager")',
                    type: "GET",
                    async: false,
                    data: { 'provinceId': 0, 'districtID': 0, 'wardID': 0 },
                    success: function (data) {
                        $.each(data, function (idx, item) {
                            var s = '';
                            if (item.HouseNumber.length != 0) {
                                s += item.HouseNumber;
                            }
                            if (item.StreetNames.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.StreetNames;
                            }
                            if (item.WardName.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.WardName;
                            }
                            if (item.DistrictName.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.DistrictName;
                            }
                            if (item.ProvinceName.length > 0) {
                                if (s.length > 0) {
                                    s += ', ';
                                }
                                s += item.ProvinceName;
                            }
                            if (item.LAT !== 0 && item.LNG !== 0) {
                                var lItem = [item.Id, item.LNG, item.LAT];
                                location.push(lItem);
                            }
                        });
                        initMap(location);
                    }
				});
    }

</script>


<script>

    function initMap(locations) {

        if (locations == null) {
            locations = [];
        }

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 6,
            center: new google.maps.LatLng(13.611203, 108.473873),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var bounds = new google.maps.LatLngBounds();
        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {

            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][1], locations[i][2]),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    showModal(locations[i][0]);
                }
            })(marker, i));
            var loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
            bounds.extend(loc);
        }
        map.fitBounds(bounds);
        map.panToBounds(bounds);

        @*var uluru = { lat: 10.8222049, lng: 106.6853089 };
        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 10,
            center: uluru
        });

        var contentString = '';

        var infowindow = new google.maps.InfoWindow({
            content: contentString
        });

        var marker = new google.maps.Marker({
            position: uluru,
            map: map,
            title: 'Uluru (Ayers Rock)'
                        });
        marker.addListener('click', function () {
            infowindow.open(map, marker);
            var url = '@Url.Action("GetDetail", "Statistic")' + "?id=" + marker;
            var url = '@Url.Action("GetDetail", "Statistic")' + "?id='000013c5-68a5-4ebe-a4e6-2d23c20c58ee'";
            $("#myModalDetail").modal('show');
        });*@
    }
</script>

<script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYRnRViXs8s0PTUKdR78s0tS_OeZqcC64&libraries=places&callback=initMap&language=vi&region=VI"></script>

