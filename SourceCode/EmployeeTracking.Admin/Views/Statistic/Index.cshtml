@using EmployeeTracking.Data.ModelCustom
@using System.Web.Configuration;
@model  List<EmployeeTracking.Data.ModelCustom.StatisticNumberStoreDay>
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section CSS {
    <link rel="stylesheet" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css" />
    <link href="~/Assets/sumo/sumoselect.min.css" rel="stylesheet" />
    <link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.css" />

    <style>
        .axias path, .axias line {
            fill: none;
            stroke: #000;
            shape-rendering: crispEdges;
        }

        .x.axias path {
            display: none;
        }

        #mapLoad {
        }

        .iframe {
            width: 100%;
        }

        .gmap_canvas {
            width: 100% !important;
        }

        .mapouter {
            width: 100% !important;
        }

        .form-control {
            border-radius: 5px;
        }

        .sltProvince {
            text-decoration: none;
            color: black;
        }

        .sltProvince {
            text-decoration: none;
        }

            .sltProvince:hover {
                text-decoration: underline;
                color: cadetblue;
                cursor: pointer;
            }

        .lstProvince {
            padding: 3px;
            background-color: antiquewhite;
            border-bottom: 0.15px solid blue;
            margin-top: 1px;
        }

        .lstProvince {
            padding: 3px;
            background-color: #F4F4F4;
            border-bottom: 0.15px solid blue;
            margin-top: 1px;
            color: black;
        }
    </style>
    <style>
        #carousel-custom {
            margin: 10px auto;
            width: 400px;
        }

            #carousel-custom .carousel-indicators {
                margin: 10px 0 0;
                overflow: auto;
                position: static;
                text-align: left;
                white-space: nowrap;
                width: 100%;
            }

                #carousel-custom .carousel-indicators li {
                    background-color: transparent;
                    -webkit-border-radius: 0;
                    border-radius: 0;
                    display: inline-block;
                    height: auto;
                    margin: 0 !important;
                    width: auto;
                }

                    #carousel-custom .carousel-indicators li img {
                        display: block;
                        opacity: 0.5;
                        height: 50px;
                    }

                    #carousel-custom .carousel-indicators li.active img {
                        opacity: 1;
                    }

                    #carousel-custom .carousel-indicators li:hover img {
                        opacity: 0.75;
                    }

            #carousel-custom .carousel-outer {
                position: relative;
            }
    </style>
    <style>
        @@media (min-width: 992px) {
            .modal-lg {
                width: 85%;
            }
        }

        .track-expand table > thead > tr > th,
        .track-expand table > tbody > tr > td {
            border: 2px solid #f4f4f4;
        }

        td.details-control {
            background: url('@WebConfigurationManager.AppSettings["rootURl"]/Content/Images/details_open.png') no-repeat center center;
            cursor: pointer;
        }

        tr.shown td.details-control {
            background: url('@WebConfigurationManager.AppSettings["rootURl"]/Content/Images/details_close.png') no-repeat center center;
        }

        div#myModal {
            max-width: 600px;
            /*max-height: 500px;*/
        }

        .modal-open {
            overflow: auto !important;
        }

            .modal-open .modal {
                overflow-y: hidden;
            }

        .modal {
            background: rgba(0,0,0,0);
        }

        .modal-body {
            position: relative;
            max-height: 500px;
            overflow-y: auto;
        }

        .modal-backdrop {
            display: none !important;
        }

        .modal-header {
            height: 50px;
            background-color: #444;
            color: #ddd;
        }

        .SumoSelect {
            width: 100%;
        }

            .SumoSelect .select-all {
                height: 36px;
            }
    </style>
}
<script src="~/Assets/sumo/jquery.sumoselect.min.js"></script>

@*chia lam 3 phan view: 1. Statistic chart, 2. phan google maps &Aacute; selections, 3. popupDetail*@
@*=============================== Day la phan chart ========================*@
<div class="">
    <h2>Thống kê cửa hàng</h2>
</div>
<div class="row">
    <div class="col-md-12" style="display:flex;justify-content:center;">
        <div id="chartLoad" style="
    padding: 5px;
    border: 1px solid #2519d2f7;
    border-radius: 9px;
    width: 80%;
    display: flex;
    height: 300px;
    justify-content: center;
">

        </div>
    </div>
</div>
@*=============================== Het phan chart ========================*@
<div class="row" style="margin-top:75px;">
    <div class="col-md-12">
        <div class="col-md-8">
            <div id="map" style="position: relative;overflow: hidden;height: 100%;min-height: 500px;"></div>
        </div>
        <div class="col-md-4">
            <div class="panel panel-default">
                <div class="panel-body">
                    <div class="col-md-4 form-group">
                        <select style="width:100%;"
                                id="provinceVietNam"
                                class="provinceVietNam1 form-control">
                            <option value="0" selected>
                                Toàn quốc
                            </option>
                            <option value="1">
                                Hồ Chí Minh
                            </option>
                            <option value="2">
                                Hà Nội
                            </option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <select style="width:100%;" class="districtVietNam form-control">
                            <option value="0">
                                Quận/huyện
                            </option>
                            <option value="1">
                                Quận 2
                            </option>
                            <option value="2">
                                Quận 3
                            </option>
                        </select>
                    </div>
                    <div class="col-md-4">
                        <select style="width:100%;" class="wardVietNam form-control">
                            <option value="0">
                                Phường 1
                            </option>
                            <option value="1">
                                Phường 2
                            </option>
                            <option value="2">
                                Phường 3
                            </option>
                        </select>
                    </div>
                    <div class="col-md-12">
                        <ul style="width:100%;height:408px;overflow-y:scroll;list-style-type:none;padding:0;">
                            <table style="width:100%" class="table table-bordered table-hover table-striped">
                                <tbody id="lstStore"></tbody>
                            </table>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<div class="">
    <h2>Quản lý hình ảnh</h2>
</div>
<div class="row">
    <div class="col-xs-12">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="row">
                    <div class="col-xs-12">
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <div class="form-group">
                                <label class="control-label">Ngày</label>
                                <input type="text" id="searchDate" name="searchDate" class="form-control" readonly />
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <div class="form-group">
                                <label class="control-label">Khu vực</label>
                                <select id="searchAreas" name="searchAreas" class="form-control filter" multiple="multiple">
                                    @{
                                        foreach (var item in ViewBag.region as List<string>)
                                        {
                                            <option value="@item">@item</option>
                                        }
                                    }
                                </select>

                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <div class="form-group">
                                <label class="control-label">Cửa hàng</label>
                                <input type="text" class="form-control" id="searchStore" name="searchStore" />
                            </div>
                        </div>
                    </div>
                    <div class="col-xs-12">
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <div class="form-group">
                                <label class="control-label">Nhân viên</label>
                                <select id="searchEmployee" name="searchEmployee" class="form-control filter" multiple="multiple">
                                    @{
                                        foreach (var item in ViewBag.employee as List<EmployeeManagerModel>)
                                        {
                                            <option value="@item.Id">@item.Name</option>
                                        }
                                    }
                                </select>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-4">
                            <div class="form-group" style="margin-top:25px;">
                                <a class="btn btn-sm btn-info searchbtn">Tìm kiếm</a>
                            </div>
                        </div>
                        <div class="col-xs-12 col-sm-6 col-md-4"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-xs-12">
                        <table id="list" class="table table-bordered table-striped table-hover">
                            <thead style="font-weight:bold;">
                                <tr>
                                    <th></th>
                                    <th>.No</th>
                                    <th>Ngày thực hiện</th>
                                    <th>Mã nhân viên</th>
                                    <th>Tên nhân viên</th>
                                    <th>Người quản lý</th>
                                    <th>Mã cửa hàng</th>
                                    <th>Tên cửa hàng</th>
                                    <th>Khu vực</th>
                                    <th>Trạng thái</th>
                                    <th>Hình Ảnh</th>
                                    @*<th>QC báo cáo</th>*@
                                </tr>
                            </thead>
                            <tbody></tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
<style>
    #carousel-custom {
        margin: 0 !important;
        width: 71%;
    }
</style>

<div id="myModalDetail" class="modal fade" role="dialog" data-stored="">
    <div class="modal-dialog" style="width:80%;">

        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal">&times;</button>
                <h4 class="modal-title">Thông tin cửa hàng</h4>
            </div>
            <div class="modal-body">
                <div id='modelContainer'></div>
            </div>

            <div class="modal-footer" style="border: none;">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
<!-- Modal View Images Packaged-->
<div class="modal fade" id="myModalImgView" tabindex="-1" role="dialog" data-backdrop="static">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title"></h4>
            </div>
            <div class="modal-body">
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            </div>
        </div>
    </div>
</div>
@*=============================== Day la phan xu ly javascriipt========================*@

<!--Chart-->
@section scripts {
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/momentjs/latest/moment.min.js"></script>
    <script type="text/javascript" src="https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js"></script>
    <script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/autonumeric/4.1.0/autoNumeric.min.js"></script>
    <script>

    //Thêm thông tin.
    function showModal(id) {
        var url = '@Url.Action("getPopUpDetail", "Statistic")' + '?id=' + id;

        $.get(url, function (data) {
            $('#modelContainer').html(data);
            $('#myModalDetail').modal('show');
            var content = @Html.Raw(Json.Encode(ViewBag.trackSessionsStart));
            //console.log(document.getElementById("tracksessions").value);
            loadTrackSessionCarousel(document.getElementById("tracksessions").value);
        });
    }

    function loadTrackSessionCarousel(id) {
        $.ajax({
            method: "GET",
            url: '@Url.Action("TrackSessionCarousel", "Statistic")',
            data: { id: id },
            success: function (res) {
                $("#track-carousel").html(res);
                $(".btn-view-carousel").removeClass("disabled");
                $("#btn-view-carousel-" + id).addClass("disabled");
            }, error: function (error) {
                alert("Error!");
            }
        });
    }
    </script>
    <script>
    //google.charts.load('current', { 'packages': ['bar'] })
    google.charts.load('current', { packages: ['corechart', 'bar'] });
    google.charts.setOnLoadCallback(drawColColors);
    function drawColColors() {

        var data = new google.visualization.DataTable();
        data.addColumn('string', 'Báo cáo');
        data.addColumn('number', 'Thành công');
        data.addColumn('number', 'Không thành công');

        function loadDataSummaryChart(callback) {
            $.ajax({
                url: '@Url.Action("ShowFiveDayChart", "Statistic")',
                type: 'POST',
                cache: false,
                async: true,
                xhrFields: {
                    withCredentials: true,
                },
                dataType: 'json',
                success: function (response) {
                    $.each(response, function (idx, item) {
                        data.addRow([item.Categorie, item.Success, item.Fail]);
                    });
                    callback();
                },
                error: function (xhr, status, error) {
                }
            });
        }

        var options = {
            legend: { position: 'bottom' },
            title: '',
            titlePosition: 'out',
            hAxis: {
                title: ''
            },
            vAxis: {
                title: '',
                format: 'short',
                gridlines: { count: 5 },
                scareType: 'mirrorLog'
            },
            series: {
                0: {
                    color: '2ECC40'
                },
                1: {
                    color: 'AAAAAA'
                }
            },
            //Makes the entire category's tooltip active
            focusTarget: 'category',
            //Use a html tooltip
            tooltip: { isHtml: true },
            asex: {

            },
            pointSize: 5,
            backgroundColor: 'none'
        };

        function drawChart() {
            var chart = new google.visualization.ColumnChart(document.getElementById('chartLoad'));
            chart.draw(data, options);
        }

        loadDataSummaryChart(drawChart);

        if (document.addEventListener) {
            window.addEventListener('resize', drawChart);
        }
        else if (document.attachEvent) {
            window.attachEvent('onresize', drawChart);
        }
        else {
            window.resize = drawChart;
        }
    }

    </script>
    <script>

    window.onload = () => {
        $(".districtVietNam").hide();
        $(".wardVietNam").hide();

        //Hiển thị map
        showAllLocationOnMap();

		//Step 1: Load vào tỉnh/thành phố
		$.ajax({
			url: '@Url.Action("GetProvinceSelect", "Location")',
			type: "GET",
			success: function(data) {
				var s = '<option value=' + 0 + '>' + 'Toàn quốc' + '</option>';
				for (var i = 0; i < data.length; i++) {
					s = s + '<option value=' + data[i].Id + '>' + data[i].Name + '</option>';
				}
                $('.provinceVietNam1').html(s);
                //Lấy danh sách tất các các tỉnh thành
                listStoreAllProvince();
			}
		});
    }

	$(document).ready(function () {

		//Step 2: Bẫy sự kiện onchange cho tỉnh/thành phố
		$("#provinceVietNam").on("change", function () {
			var id = $("#provinceVietNam option:selected").val();
			if (id === "0") {
                $(".districtVietNam").hide();
                $(".wardVietNam").hide();
                listStoreAllProvince();
                showAllLocationOnMap();
            } else {
				$(".districtVietNam").show();
                $(".wardVietNam").hide();

				//Lấy danh sách quận huyện theo tỉnh thành phố
                setDistrictCombobox(id);

                //Get danh sách cửa hàng theo tỉnh thành phố
                listStoreAByProvince(id, 0, 0);

			}

		});

		//Step 5: Bẫy sự kiện onchange cho quận/huyện
        $(".districtVietNam").on("change", function () {
            var provinceid = $("#provinceVietNam option:selected").val();
            var id = $(".districtVietNam option:selected").val();

            //Get danh sách phường xã theo quận huyện
            setWardCombobox(id);

            //Get danh sách cửa hàng theo quận huyện
            listStoreAByProvince(provinceid, id, 0);

        });
        //Bẫy sự kiện onchange cho phường xã
        $(".wardVietNam").on("change", function () {
            var provinceId = $("#provinceVietNam option:selected").val();
            var districtId = $(".districtVietNam option:selected").val();
            var wardId = $(".wardVietNam option:selected").val();

            //Get danh sách cửa hàng theo phường xã
            listStoreAByProvince(provinceId, districtId, wardId);
        });
    });

    function setDistrictCombobox(provinceID) {

        $.ajax({
            url: '@Url.Action("GetDistrictSelect", "Location")',
            type: "GET",
            data: { 'provinceId': provinceID },
			success: function (data) {
                //Step 4: Load dữ liệu cho quận/huyện theo tỉnh đã chọn ở trên
                var s = '<option value="0" selected="true">Chọn quận huyện</option>';
				for(var i=0; i<data.length; i++) {
					s = s + '<option value=' + data[i].Id + '>'+ data[i].Name +  '</option>';
				}
                $('.districtVietNam').html(s);
                $('select.districtVietNam').val('0');
            }
		});
    }

    function setWardCombobox(districtId) {
        var provinceId = $("#provinceVietNam option:selected").val();

        //Get danh sách cửa hàng theo quận huyện
        listStoreAByProvince(provinceId, districtId, 0);

        if (districtId === "0") {
            $(".wardVietNam").hide();
        } else {
            $(".wardVietNam").show();

			//Step 6: Nếu có 1 quận/huyện được chọn bởi người dùng
			$.ajax({
                url: '@Url.Action("GetWardSelect", "Location")',
                type: "GET",
                data: { 'districtId': districtId},
                success: function (data) {
                    //Step 7: Load dữ liệu của phường/xã theo {tỉnh/thành phố + quận/huyện} ở trên
                    var s = '<option value="0" selected="true">Chọn phường xã</option>';
					for(var i=0; i<data.length; i++) {
						s = s + '<option value=' + data[i].Id + '>'+ data[i].Name +  '</option>';
					}
                    $('.wardVietNam').html(s);
                }
			});
        }
    }


    //Detect, when user click into province item in list
    $(document).on('click', '.provinceItem', function (e) {
        var provinceId = $(this).attr('data-id');

		//Lấy danh sách quận huyện theo tỉnh thành phố
        setDistrictCombobox(provinceId);

        //Get danh sách cửa hàng theo tỉnh thành phố
        listStoreAByProvince(provinceId, 0, 0);

        $('#provinceVietNam').val(provinceId);

        $(".districtVietNam").show();
        $(".wardVietNam").hide();

    });

    //Detect, when user click into store item in list
    $(document).on('click', '.storeItem', function (e) {
        var storeId = $(this).attr('data-id');
        var lng = $(this).attr('data-lng');
        var lat = $(this).attr('data-lat');
        if (lng === "0" || lat === "0") {
            initMap([]);
        } else {
            initMap([[storeId, lng, lat]]);
        }
    });

    function listStoreAllProvince() {
        $.ajax({
            url: '@Url.Action("GetAllStoreAllProvince", "Location")',
            type: "GET",
            success: function (data) {
                $('#lstStore').empty();
                $.each(data, function (idx, item) {
                    $('#lstStore').append('<tr><td><a href="javascript:;" class="provinceItem" data-id="' + item.Id + '">' + item.Name + '(' + item.NumOfStore + ')</a></td></tr>');
                });
            }
		});
    }

    </script>
    <script>

    function listStoreAByProvince(province, district, ward) {
        var location = [];

        $.ajax({
            url: '@Url.Action("GetByProvince", "StoreManager")',
            type: "GET",
            async: false,
            data: {
                'provinceId': province,
                'districtID': district,
                'wardID': ward,
                'getAddress': true
            },
            success: function (data) {
                $('#lstStore').empty();
                $.each(data, function (idx, item) {
                    var s = '';
                    if (item.HouseNumber.length != 0) {
                        s += item.HouseNumber;
                    }
                    if (item.StreetNames.length > 0) {
                        if (s.length > 0) {
                            s += ', ';
                        }
                        s += item.StreetNames;
                    }
                    if (item.WardName.length > 0) {
                        if (s.length > 0) {
                            s += ', ';
                        }
                        s += item.WardName;
                    }
                    if (item.DistrictName.length > 0) {
                        if (s.length > 0) {
                            s += ', ';
                        }
                        s += item.DistrictName;
                    }
                    if (item.ProvinceName.length > 0) {
                        if (s.length > 0) {
                            s += ', ';
                        }
                        s += item.ProvinceName;
                    }

                    $('#lstStore').append('<tr><td><a href="javascript:;" class="storeItem" data-id="' + item.Id + '" data-lng="' + item.LNG + '" data-lat="' + item.LAT + '">' + s + '</a></td></tr>');

                    if (item.LAT !== 0 && item.LNG !== 0) {
                        var lItem = [item.Id, item.LNG, item.LAT];
                        location.push(lItem);
                    }

                });
                initMap(location);
            }
		});
    }

    function showAllLocationOnMap() {

        var location = [];

        $.ajax({
            url: '@Url.Action("GetByProvince", "StoreManager")',
            type: "GET",
            async: false,
            data: {
                'provinceId': 0, 'districtID': 0, 'wardID': 0, 'getAddress': false },
            success: function (data) {
                $.each(data, function (idx, item) {
                    if (item.LAT !== 0 && item.LNG !== 0) {
                        var lItem = [item.Id, item.LNG, item.LAT];
                        location.push(lItem);
                    }
                });
                initMap(location);
            }
		});
    }

    function initMap(locations) {

        if (locations == null) {
            locations = [];
        }

        var map = new google.maps.Map(document.getElementById('map'), {
            zoom: 6,
            center: new google.maps.LatLng(13.611203, 108.473873),
            mapTypeId: google.maps.MapTypeId.ROADMAP
        });

        var bounds = new google.maps.LatLngBounds();
        var infowindow = new google.maps.InfoWindow();

        var marker, i;

        for (i = 0; i < locations.length; i++) {

            marker = new google.maps.Marker({
                position: new google.maps.LatLng(locations[i][2], locations[i][1]),
                map: map
            });

            google.maps.event.addListener(marker, 'click', (function (marker, i) {
                return function () {
                    showModal(locations[i][0]);
                }
            })(marker, i));
            var loc = new google.maps.LatLng(marker.position.lat(), marker.position.lng());
            bounds.extend(loc);
        }
        map.fitBounds(bounds);
        map.panToBounds(bounds);

    }
    </script>
    <!--Search box-->
    <script>
        var fromDate = '';
        var endDate = '';
        $(document).ready(function () {

            fromDate = dateToYMD(new Date());
            endDate = dateToYMD(new Date());


            $('#searchDate').daterangepicker({
                startDate: new Date(),
                maxDate: new Date(),
                minYear: 1990,
                maxYear: parseInt(moment().format('YYYY'), 10)
            });

            $('#searchDate').on('apply.daterangepicker', function (ev, picker) {
                fromDate = picker.startDate.format('YYYY-MM-DD');
                endDate = picker.endDate.format('YYYY-MM-DD');
            });

            $('select.filter').SumoSelect({
                placeholder: 'Chọn',
                selectAll: true,
                search: true,
                searchText: 'Tìm...',
                noMatch: 'Không tìm thấy "{0}"',
                captionFormat: '',
                captionFormatAllSelected: 'Đã chọn tất cả',
                csvDispCount: 7
            });

        });

        $(document).on('click', '.searchbtn', function (e) {
            table.ajax.reload();
        });

        function dateToYMD(date) {
            var d = date.getDate();
            var m = date.getMonth() + 1; //Month from 0 to 11
            var y = date.getFullYear();
            return '' + y + '-' + (m <= 9 ? '0' + m : m) + '-' + (d <= 9 ? '0' + d : d);
        }
    </script>
    <!--Table-->
    <script>

        var table;

        /**
         * l: length changing input control
         * f: filtering input
         * t: The table
         * i: Table informatin summary
         * p: pagination control
         * r: Processing display element
         * < and > - div element
         * <"class" and > - div with a class
         * <"#id" and > - div with an ID
         * <"#id.class" and > - div with an ID and a class
         * https://datatables.net/reference/option/dom
         */
        var dom = '<"top"<"row"<"col-md-3 col-sm-4 col-xs-12"l><"col-md-6 col-sm-4 col-xs-12"<"toolbar">><"col-md-3 col-sm-4 col-xs-12 text-right"f>>>rt<"bottom"<"row"<"col-md-5 col-sm-6 col-xs-12"i><"col-md-7 col-sm-6 col-xs-12"p>>><"clear">';

        /* Formatting function for row details - modify as you need */
        function detailRow(id, row) {
            $.ajax({
                method: "GET",
                url: '@Url.Action("ExpandTrack", "Statistic")',
                async: false,
                data: { id: id },
                success: function (res) {
                    var tmp = '<table>' + res.toString() + '</table>';
                    row.child(tmp).show();
                }, error: function (error) {
                    alert("Error!");
                }
            });
        }

        $(document).ready(function () {

            table = $('#list').DataTable({
                processing: true,
                serverSide: true,
                searching: false,
                ordering: false,
                paging: true,
                responsive: true,
                pageLength: 10,
                pagingType: 'full_numbers',
                dom: dom,
                info: true,
                autoWidth: false,
                initComplete: function (settings, json) {
                    //Do something after finish
                },
                language: {
                    lengthMenu: 'Hiển thị _MENU_',
                    zeroRecords: 'Dữ liệu không tồn tại',
                    info: 'Trang _PAGE_/_PAGES_',
                    infoEmpty: 'Không tìm thấy kết quả',
                    infoFiltered: '(Tìm kiếm trên _MAX_ dòng)',
                    search: 'Tìm kiếm',
                    processing: 'Đang xử lý',
                    paginate: {
                        first: '<<',
                        previous: '<',
                        next: '>',
                        last: '>>'
                    }
                },
               // order: [[2, "desc"]],
                ajax: {
                    //url: '/ImageManagement/index',
                    url: '@Url.Action("index", "ImageManagement")',
                    type: 'post',
                    data: function (d) {
                        var arealList = [];
                        var storeList = [];
                        var emplList = [];
                        //
                        var _lArea = $('#searchAreas').val();
                        var _lEmpl = $('#searchEmployee').val();
                        if ($('#searchStore').val() !== '') {
                            var _lStore = $('#searchStore').val().split(',');
                            $.each(_lStore, function (idx, item) {
                                storeList.push($.trim(item));
                            });
                        }

                        $.each(_lArea, function (idx, item) {
                            arealList.push(item);
                        });


                        $.each(_lEmpl, function (idx, item) {
                            emplList.push(item);
                        });

                        //
                        d.FromDate = fromDate;
                        d.ToDate = endDate;
                        d.Region = arealList;
                        d.Store = storeList;
                        d.Employee = emplList;
                    }
                },
                columns: [
                    {
                        className: 'details-control',
                        orderable: false,
                        render: function (obj, type, data, meta) {
                            return '<input type="hidden" value="' + data.Id + '" />';
                        }
                    },
                    {
                        orderable: false,
                        width: '40px',
                        className: 'ctn-center',
                        render: function (obj, type, data, meta) {
                            return meta.row + meta.settings._iDisplayStart + 1;
                        }
                    },
                    {
                        data: 'Date',
                        orderable: false,
                        searchable: false,
                        width: '80px'
                    },
                    {
                        data: 'EmployeeId',
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'EmployeeName',
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'Manager',
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'MasterStoreCode',
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'MasterStoreName',
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'Region',
                        searchable: false,
                        orderable: false
                    },
                    {
                        data: 'StoreStatus',
                        orderable: false,
                        searchable: false,
                        render: function (obj, type, data, meta) {
                            if (data.StoreStatus === true) {
                                return 'Thành công';
                            } else {
                                return 'Không thành công';
                            }
                        }
                    },
                    {
                        orderable: false,
                        searchable: false,
                        render: function (obj, type, data, meta) {
                            var str = '';
                            $.each(data.TrackSessions, function (idx, item) {
                                var titleSession = data.MasterStoreCode + '_' + item.CreateDateString;
                                if (item.Status === true) {
                                    str += '<div class="btn-group" id="track-session-' + item.Id + '">';
                                    str += '<a class="btn btn-xs btn-info editTrackSessionBtn" href="javascript:;" data-Id="' + item.Id + '" data-Title="' + titleSession + '">' + titleSession + '</a>';
                                    str += '</div>';
                                } else {
                                    str += '<div class="btn-group">';
                                    str += '<a class="btn btn-xs btn-warning" href="javascript:;">' + titleSession + '(Chưa Submit)</a>';
                                    str += '</div>';
                                }
                            });
                            return str;
                        }
                    }
                    //,{
                    //    data: 'QCStatusString',
                    //    searchable: false,
                    //    orderable: false,
                    //}
                ]
            });

            // Add event listener for opening and closing details
            $('#list tbody').on('click', 'td.details-control', function () {

                //find id
                var input = $(this).find("input");
                var id = $(input).val();

                var tr = $(this).closest('tr');
                var row = table.row(tr);

                if (row.child.isShown()) {
                    // This row is already open - close it
                    row.child.hide();
                    tr.removeClass('shown');
                }
                else {
                    // Open this row
                    //row.child(format(row.data())).show();
                    detailRow(id, row);
                    tr.addClass('shown');
                }
            });

            //When user click edit session
            $('#list tbody').on('click', '.editTrackSessionBtn', function (e) {
                var id = $(this).attr('data-Id');
                var title = $(this).attr('data-Title');
                $("#myModalImgView").modal('show');

                $("#myModalImgView .modal-header .modal-title").html(title);
                $("#myModalImgView .modal-footer .btn-download").attr("href", $("#myModalImgView .modal-footer .btn-download").attr("data-href") + "?id=" + id);
                $.ajax({
                    method: "GET",
                    url: '@Url.Action("EditTrackSession", "Statistic")',
                    data: { id: id },
                    success: function (res) {
                        $("#myModalImgView .modal-body").html(res);

                        $("#SessionDetailImage").change(function () {
                            readURL(this);
                            console.log(this);
                        });
                    }, error: function (error) {
                        alert("Error!" + error);
                    }
                });
            });


        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                $("img.img-origin").removeClass("hidden");
                $("img#img-preview").remove();
                $("a.btn-change").removeClass("hidden");

                var reader = new FileReader();
                reader.onload = function (e) {
                }
                reader.readAsDataURL(input.files[0]);
            }
        }
        

    </script>
    <script async defer src="https://maps.googleapis.com/maps/api/js?key=AIzaSyAYRnRViXs8s0PTUKdR78s0tS_OeZqcC64&libraries=places&callback=initMap&language=vi&region=VI"></script>

}