@model EmployeeTracking.Data.ModelCustom.UserViewModel
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<div class="modal-content">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "frmDetail" }))
    {
        @Html.ValidationSummary(true)
        <div class="modal-header">
            <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
            @if (!Model.IsEdit)
            {
                <h4 class="modal-title">Thêm tài khoản</h4>
            }
            else
            {
                <h4 class="modal-title">Cập nhật tài khoản</h4>
            }
        </div>
        <div class="modal-body">
            @*<div class="form-group">
                    <span id="error" class="text-danger"></span>
                </div>*@
            <div class="row">
                <div class="col-xs-12">
                    @Html.HiddenFor(model => model.IsEdit)
                    @if (!Model.IsEdit)
                    {
                        <div class="form-group">
                            <label class="control-label">Tên đăng nhập</label>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        <div class="form-group">
                            <label class="control-label">Tên đăng nhập</label>
                            @Html.TextBoxFor(model => model.UserName, new { @class = "form-control", @readonly = "readonly" })
                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            @Html.HiddenFor(model => model.IsActive, new { @class = "form-control" })
                        </div>
                    }

                    @if (!Model.IsEdit)
                    {
                        <div class="form-group">
                            <label class="control-label">Mật khẩu</label>
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>

                        <div class="form-group">
                            <label class="control-label">Nhập lại mật khẩu</label>
                            @Html.PasswordFor(model => model.PasswordConfirm, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.PasswordConfirm, "", new { @class = "text-danger" })
                        </div>
                    }
                    else
                    {
                        <input type="hidden" id="Password" name="Password" value="none" />
                        <input type="hidden" id="PasswordConfirm" name="PasswordConfirm" value="none" />
                    }
                    <div class="form-group">
                        <label class="control-label">Họ và tên</label>
                        @Html.TextBoxFor(model => model.FullName, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">Email</label>
                        @Html.TextBoxFor(model => model.Email, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                    </div>

                    <div class="form-group">
                        <label class="control-label">Số điện thoại</label>
                        @Html.TextBoxFor(model => model.PhoneNumber, new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                    </div>


                    <div class="form-group">
                        <label class="control-label">Loại tài khoản</label>
                        @(Html.DropDownListFor(model => model.UserTypeCode, new SelectList(ViewBag.UserType, "Code", "Name"), new { @class = "form-control" }))
                        @Html.ValidationMessageFor(model => model.UserTypeCode, "", new { @class = "text-danger" })
                    </div>

                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Đóng</button>
            <button type="submit" class="btn btn-primary">Lưu lại</button>
        </div>
    }
</div>


<script>
    $(document).ready(function () {
        //var error = $("#frmDetail").find("#error");
        //error.hide();
        var form = $("#frmDetail");
        form.validate();
        //Lưu
        $("#frmDetail").submit(function (event) {
            event.preventDefault();
            if (form.valid()) { //nhập hợp lệ
                $.ajax({
                    //url: '/EmployeeManager/PostDetail',
                    url: '@Url.Action("PostDetail", "UserManagement")',
                    type: "POST",
                    data: $("#frmDetail").serialize(),
                    success: function (data) {
                        if (data.IsSuccess) {
                            openFunc.pushNotifySuccess(data.Message);
                            closePopUp();
                            table.ajax.reload();
                        }
                        else {
                            openFunc.pushNotifyError(data.Message);
                            //error.show();
                            //error.html('');
                            //error.html(data.Message);
                        }
                    }
                });
            }
        });
    });

    function closePopUp() {
        $('#myModalDetail').modal('hide');
    }
</script>